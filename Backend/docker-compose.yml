version: '3.8'

services:
  # API service
  api:
    build:
      context: ..
      dockerfile: Backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ..:/app
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
      - neo4j
      - qdrant
    command: uvicorn Backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker
  worker:
    build:
      context: ..
      dockerfile: Backend/Dockerfile
    volumes:
      - ..:/app
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
      - neo4j
      - qdrant
    command: celery -A Backend.config.celery worker --loglevel=info

  # Celery flower (monitoring)
  flower:
    build:
      context: ..
      dockerfile: Backend/Dockerfile
    ports:
      - "5555:5555"
    volumes:
      - ..:/app
    env_file:
      - ./.env
    depends_on:
      - worker
    command: celery -A Backend.config.celery flower

  # PostgreSQL
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=context_builder

  # Redis
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Neo4j
  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_usage__report_enabled=false

  # Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  qdrant_data:
